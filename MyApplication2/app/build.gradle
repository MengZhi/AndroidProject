apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def androidId = rootProject.ext.androidId

android {
    compileSdkVersion androidId.compileSdkVersion
    defaultConfig {
        applicationId appId.app
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName
        testInstrumentationRunner androidId.testInstrumentationRunner

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName(), packageNameForAPT: packageNameForAPT, student: "hello this is student" ]
            }
        }
    }
    buildTypes {
        debug {
            buildConfigField("String", "debug", "EnvUtil.ProductUrl")
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "debug", "EnvUtil.debug")
        }
    }

    dataBinding {
        enabled = true
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.18.1"
        }
    }
//    ndkPath = "/Users/mengzhi/Library/Android/sdk/ndk"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    ndkVersion = "22.1.7171670"
//    dynamicFeatures = [':login', ':register']
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":myARouter-annotations")

    // 公共基础库
    implementation project(":common")
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    kapt project (':compiler')

    depenId.each { k, v -> implementation v }

    if (isRelease) {
        // 进if，集成，融为一体（order，personal）

        // 订单模块
        implementation project(":order")

        // 个人中心模块
        implementation project(":personal")
    }
}
repositories {
    mavenCentral()
}
